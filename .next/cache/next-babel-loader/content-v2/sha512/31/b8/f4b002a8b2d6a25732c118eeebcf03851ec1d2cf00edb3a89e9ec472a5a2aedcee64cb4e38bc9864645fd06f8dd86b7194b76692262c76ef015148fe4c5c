{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.jsx\";\n\nconst HeroBox = ({\n  coins\n}) => {\n  console.log('coins: ', coins);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mt-6 custom-wrapper-2 mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"STATE OF CRYPTO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getServerSideProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = {\n    vs_currency: 'usd',\n    per_page: 10\n  };\n  url.search = new URLSearchParams(params).toString();\n  const res = await fetch(url.href);\n  console.log(url);\n  let coins = await res.json();\n\n  if (!coins) {\n    return {\n      notFound: true\n    };\n  } // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n\n  return {\n    props: {\n      coins\n    }\n  };\n}\nexport default HeroBox;","map":{"version":3,"sources":["/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.jsx"],"names":["HeroBox","coins","console","log","getServerSideProps","url","URL","params","vs_currency","per_page","search","URLSearchParams","toString","res","fetch","href","json","notFound","props"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,sBACE;AAAK,IAAA,KAAK,EAAC,mCAAX;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD,C,CAUA;AACA;AACA;;;AACA,OAAO,eAAeG,kBAAf,GAAoC;AACzC;AACA;AACA,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,gDAAR,CAAZ;AACA,MAAIC,MAAM,GAAG;AAAEC,IAAAA,WAAW,EAAE,KAAf;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAb;AACAJ,EAAAA,GAAG,CAACK,MAAJ,GAAa,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,QAA5B,EAAb;AAEA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAACU,IAAL,CAAvB;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAEA,MAAIJ,KAAK,GAAG,MAAMY,GAAG,CAACG,IAAJ,EAAlB;;AAEA,MAAI,CAACf,KAAL,EAAY;AACV,WAAO;AACLgB,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GAhBwC,CAiBzC;AACA;;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLjB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,OAAf","sourcesContent":["const HeroBox = ({ coins }) => {\n  console.log('coins: ', coins);\n  return (\n    <div class='mt-6 custom-wrapper-2 mx-auto p-4'>\n      <h2>STATE OF CRYPTO</h2>\n      <ul></ul>\n    </div>\n  );\n};\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getServerSideProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = { vs_currency: 'usd', per_page: 10 };\n  url.search = new URLSearchParams(params).toString();\n\n  const res = await fetch(url.href);\n  console.log(url);\n\n  let coins = await res.json();\n\n  if (!coins) {\n    return {\n      notFound: true,\n    };\n  }\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      coins,\n    },\n  };\n}\n\nexport default HeroBox;\n"]},"metadata":{},"sourceType":"module"}