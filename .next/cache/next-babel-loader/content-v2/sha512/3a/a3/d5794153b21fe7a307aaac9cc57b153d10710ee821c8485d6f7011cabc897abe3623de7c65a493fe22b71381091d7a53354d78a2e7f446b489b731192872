{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.js\",\n    _this = this;\n\nvar HeroBox = function HeroBox(_ref) {\n  var coins = _ref.coins;\n  console.log('coins: ', coins);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"class\": \"mt-6 custom-wrapper-2 mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"STATE OF CRYPTO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: coins.forEach(function (coin) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: coin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, _this);\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = HeroBox;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url, params, res, coins;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Call an external API endpoint to get posts.\n            // You can use any data fetching library\n            url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n            params = {\n              vs_currency: 'usd',\n              per_page: 10\n            };\n            url.search = new URLSearchParams(params).toString();\n            _context.next = 5;\n            return fetch(url.href);\n\n          case 5:\n            res = _context.sent;\n            console.log(url);\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            coins = _context.sent;\n\n            if (coins) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              redirect: {\n                destination: '/',\n                permanent: false\n              }\n            });\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              props: {\n                coins: coins\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default HeroBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroBox\");","map":{"version":3,"sources":["/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.js"],"names":["HeroBox","coins","console","log","forEach","coin","getStaticProps","url","URL","params","vs_currency","per_page","search","URLSearchParams","toString","fetch","href","res","json","redirect","destination","permanent","props"],"mappings":";;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,sBACE;AAAK,aAAM,mCAAX;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBACGA,KAAK,CAACG,OAAN,CAAc,UAACC,IAAD,EAAU;AACvB;AAAA;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAZD,C,CAcA;AACA;AACA;;;KAhBML,O;AAiBN,gBAAsBM,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACMC,YAAAA,GAHD,GAGO,IAAIC,GAAJ,CAAQ,gDAAR,CAHP;AAIDC,YAAAA,MAJC,GAIQ;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,QAAQ,EAAE;AAAhC,aAJR;AAKLJ,YAAAA,GAAG,CAACK,MAAJ,GAAa,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,QAA5B,EAAb;AALK;AAAA,mBAOaC,KAAK,CAACR,GAAG,CAACS,IAAL,CAPlB;;AAAA;AAOCC,YAAAA,GAPD;AAQLf,YAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AARK;AAAA,mBAUaU,GAAG,CAACC,IAAJ,EAVb;;AAAA;AAUDjB,YAAAA,KAVC;;AAAA,gBAYAA,KAZA;AAAA;AAAA;AAAA;;AAAA,6CAaI;AACLkB,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,WAAW,EAAE,GADL;AAERC,gBAAAA,SAAS,EAAE;AAFH;AADL,aAbJ;;AAAA;AAAA,6CAsBE;AACLC,cAAAA,KAAK,EAAE;AACLrB,gBAAAA,KAAK,EAALA;AADK;AADF,aAtBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6BP,eAAeD,OAAf","sourcesContent":["const HeroBox = ({ coins }) => {\n  console.log('coins: ', coins);\n  return (\n    <div class='mt-6 custom-wrapper-2 mx-auto p-4'>\n      <h2>STATE OF CRYPTO</h2>\n      <ul>\n        {coins.forEach((coin) => {\n          <li>{coin}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = { vs_currency: 'usd', per_page: 10 };\n  url.search = new URLSearchParams(params).toString();\n\n  const res = await fetch(url.href);\n  console.log(url);\n\n  let coins = await res.json();\n\n  if (!coins) {\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    };\n  }\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      coins,\n    },\n  };\n}\n\nexport default HeroBox;\n"]},"metadata":{},"sourceType":"module"}