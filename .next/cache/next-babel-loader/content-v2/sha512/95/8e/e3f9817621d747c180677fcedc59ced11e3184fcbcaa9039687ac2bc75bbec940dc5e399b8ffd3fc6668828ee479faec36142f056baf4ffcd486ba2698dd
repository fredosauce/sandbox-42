{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HeroBox = ({\n  coins\n}) => {\n  console.log('coins: ', coins);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    class: \"mt-6 custom-wrapper-2 mx-auto p-4\",\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"STATE OF CRYPTO\"\n    }), /*#__PURE__*/_jsx(\"ul\", {})]\n  });\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getServerSideProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = {\n    vs_currency: 'usd',\n    per_page: 10\n  };\n  url.search = new URLSearchParams(params).toString();\n  const res = await fetch(url.href);\n  console.log(url);\n  let coins = await res.json();\n\n  if (!coins) {\n    return {\n      notFound: true\n    };\n  } // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n\n  return {\n    props: {\n      coins\n    }\n  };\n}\nexport default HeroBox;","map":null,"metadata":{},"sourceType":"module"}