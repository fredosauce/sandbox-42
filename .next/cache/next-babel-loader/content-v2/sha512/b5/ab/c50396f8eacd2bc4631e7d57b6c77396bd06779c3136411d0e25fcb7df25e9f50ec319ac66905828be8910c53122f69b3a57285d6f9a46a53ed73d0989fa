{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _asyncToGenerator from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.js\",\n    _this = this;\n\nvar HeroBox = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var url, params, res, coins;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _objectDestructuringEmpty(_ref);\n\n            url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n            params = {\n              vs_currency: 'usd',\n              per_page: 10\n            };\n            url.search = new URLSearchParams(params).toString();\n            _context.next = 6;\n            return fetch(url.href);\n\n          case 6:\n            res = _context.sent;\n            console.log(url);\n            _context.next = 10;\n            return res.json();\n\n          case 10:\n            coins = _context.sent;\n            console.log('coins: ', coins);\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"mt-6 custom-wrapper-2 mx-auto p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"STATE OF CRYPTO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: coins.forEach(function (coin) {\n                  /*#__PURE__*/\n                  _jsxDEV(\"li\", {\n                    children: coin\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 16,\n                    columnNumber: 11\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 7\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 5\n            }, _this));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function HeroBox(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = HeroBox;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var url, params, res, coins;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Call an external API endpoint to get posts.\n            // You can use any data fetching library\n            url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n            params = {\n              vs_currency: 'usd',\n              per_page: 10\n            };\n            url.search = new URLSearchParams(params).toString();\n            _context2.next = 5;\n            return fetch(url.href);\n\n          case 5:\n            res = _context2.sent;\n            console.log(url);\n            _context2.next = 9;\n            return res.json();\n\n          case 9:\n            coins = _context2.sent;\n\n            if (coins) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              redirect: {\n                destination: '/',\n                permanent: false\n              }\n            });\n\n          case 12:\n            return _context2.abrupt(\"return\", {\n              props: {\n                coins: coins\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default HeroBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroBox\");","map":{"version":3,"sources":["/Users/fredo/Desktop/projects/sandbox-42/components/HeroBox.js"],"names":["HeroBox","url","URL","params","vs_currency","per_page","search","URLSearchParams","toString","fetch","href","res","console","log","json","coins","forEach","coin","getStaticProps","redirect","destination","permanent","props"],"mappings":";;;;;;;;AAAA,IAAMA,OAAO;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACRC,YAAAA,GADQ,GACF,IAAIC,GAAJ,CAAQ,gDAAR,CADE;AAEVC,YAAAA,MAFU,GAED;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,QAAQ,EAAE;AAAhC,aAFC;AAGdJ,YAAAA,GAAG,CAACK,MAAJ,GAAa,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,QAA5B,EAAb;AAHc;AAAA,mBAKIC,KAAK,CAACR,GAAG,CAACS,IAAL,CALT;;AAAA;AAKRC,YAAAA,GALQ;AAMdC,YAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AANc;AAAA,mBAQIU,GAAG,CAACG,IAAJ,EARJ;;AAAA;AAQVC,YAAAA,KARU;AASdH,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AATc,0DAWZ;AAAK,uBAAM,mCAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA,0BACGA,KAAK,CAACC,OAAN,CAAc,UAACC,IAAD,EAAU;AACvB;AAAA;AAAA,8BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACD,iBAFA;AADH;AAAA;AAAA;AAAA;AAAA,uBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPjB,OAAO;AAAA;AAAA;AAAA,GAAb,C,CAsBA;AACA;AACA;;;KAxBMA,O;AAyBN,gBAAsBkB,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACMjB,YAAAA,GAHD,GAGO,IAAIC,GAAJ,CAAQ,gDAAR,CAHP;AAIDC,YAAAA,MAJC,GAIQ;AAAEC,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,QAAQ,EAAE;AAAhC,aAJR;AAKLJ,YAAAA,GAAG,CAACK,MAAJ,GAAa,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,QAA5B,EAAb;AALK;AAAA,mBAOaC,KAAK,CAACR,GAAG,CAACS,IAAL,CAPlB;;AAAA;AAOCC,YAAAA,GAPD;AAQLC,YAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AARK;AAAA,mBAUaU,GAAG,CAACG,IAAJ,EAVb;;AAAA;AAUDC,YAAAA,KAVC;;AAAA,gBAYAA,KAZA;AAAA;AAAA;AAAA;;AAAA,8CAaI;AACLI,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,WAAW,EAAE,GADL;AAERC,gBAAAA,SAAS,EAAE;AAFH;AADL,aAbJ;;AAAA;AAAA,8CAsBE;AACLC,cAAAA,KAAK,EAAE;AACLP,gBAAAA,KAAK,EAALA;AADK;AADF,aAtBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6BP,eAAef,OAAf","sourcesContent":["const HeroBox = async ({}) => {\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = { vs_currency: 'usd', per_page: 10 };\n  url.search = new URLSearchParams(params).toString();\n\n  const res = await fetch(url.href);\n  console.log(url);\n\n  let coins = await res.json();\n  console.log('coins: ', coins);\n  return (\n    <div class='mt-6 custom-wrapper-2 mx-auto p-4'>\n      <h2>STATE OF CRYPTO</h2>\n      <ul>\n        {coins.forEach((coin) => {\n          <li>{coin}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n  let params = { vs_currency: 'usd', per_page: 10 };\n  url.search = new URLSearchParams(params).toString();\n\n  const res = await fetch(url.href);\n  console.log(url);\n\n  let coins = await res.json();\n\n  if (!coins) {\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    };\n  }\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      coins,\n    },\n  };\n}\n\nexport default HeroBox;\n"]},"metadata":{},"sourceType":"module"}