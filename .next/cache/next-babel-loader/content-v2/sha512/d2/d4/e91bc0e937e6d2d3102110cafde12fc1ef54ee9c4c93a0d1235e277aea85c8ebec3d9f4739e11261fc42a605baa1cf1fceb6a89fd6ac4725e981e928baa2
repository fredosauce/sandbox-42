{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fredo/Desktop/projects/sandbox-42/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar HeroBox = function HeroBox(_ref) {\n  var coins = _ref.coins;\n  console.log('coins: ', coins);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    \"class\": \"mt-6 custom-wrapper-2 mx-auto p-4\",\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"STATE OF CRYPTO\"\n    }), /*#__PURE__*/_jsx(\"ul\", {})]\n  });\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport function getServerSideProps() {\n  return _getServerSideProps.apply(this, arguments);\n}\n\nfunction _getServerSideProps() {\n  _getServerSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url, params, res, coins;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Call an external API endpoint to get posts.\n            // You can use any data fetching library\n            url = new URL('https://api.coingecko.com/api/v3/coins/markets');\n            params = {\n              vs_currency: 'usd',\n              per_page: 10\n            };\n            url.search = new URLSearchParams(params).toString();\n            _context.next = 5;\n            return fetch(url.href);\n\n          case 5:\n            res = _context.sent;\n            console.log(url);\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            coins = _context.sent;\n\n            if (coins) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              notFound: true\n            });\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              props: {\n                coins: coins\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServerSideProps.apply(this, arguments);\n}\n\nexport default HeroBox;","map":null,"metadata":{},"sourceType":"module"}